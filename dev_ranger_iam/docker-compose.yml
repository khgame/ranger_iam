version: '3.8'

services:
  app:
    build:
      context: ..
      dockerfile: ./deployment/Dockerfile
    environment:
      - RANGER_ENV=dev
    ports:
      - "${RANGER_IAM_PORT:-18090}:8090"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - ranger_iam-net
    volumes:
      - ./logs:/app/logs  # 将宿主机当前目录下的 logs 文件夹映射到容器的/app/logs目录
    entrypoint: [ "/bin/sh", "-c" ] # 覆盖 Dockerfile 的 ENTRYPOINT/CMD
    command: [ "./ranger_iam" ]
#    command: [ "echo 'The app service is started but actual command will be executed manually.' && tail -f /dev/null" ] # 保持容器运行，但不执行应用


  mysql:
    image: mysql:latest
    ports:
      - "${RANGER_IAM_MYSQL_PORT:-13306}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: example_password
      MYSQL_DATABASE: ranger_iam
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    volumes:
      - ./mysql-data:/var/lib/mysql
      - ../deployment/migration:/migration
      - ../deployment/migration/migrate.sh:/migrate.sh
    networks:
      - ranger_iam-net
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      timeout: 20s
      retries: 10
      interval: 5s

  redis:
    image: redis:latest
    ports:
      - "127.0.0.1:${RANGER_IAM_REDIS_PORT:-16379}:6379"
    volumes:
      - ./redis-data:/data
    networks:
      - ranger_iam-net

networks:
  ranger_iam-net:
    driver: bridge

volumes:
  mysql-data:
    driver: local
  redis-data:
    driver: local